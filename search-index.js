var searchIndex = {};
searchIndex['soundchange-english'] = {"items":[[0,"","soundchange-english","A reimplementation of Mark Rosenfelder's [pronunciation algorithm][spell] for English.\nMostly an example for rust-soundchange, but also serves as an approximate algorithm."],[3,"Word","","A sequence of phonemes."],[3,"WordPhonemes","","An iterator for every phoneme inside given word."],[4,"Phoneme","","A phoneme for English."],[13,"P","","",0],[13,"B","","",0],[13,"T","","",0],[13,"D","","",0],[13,"G","","",0],[13,"K","","",0],[13,"M","","",0],[13,"N","","",0],[13,"NG","","",0],[13,"F","","",0],[13,"V","","",0],[13,"TH","","",0],[13,"S","","",0],[13,"Z","","",0],[13,"SH","","",0],[13,"CH","","",0],[13,"J","","",0],[13,"R","","",0],[13,"L","","",0],[13,"H","","",0],[13,"Y","","",0],[13,"W","","",0],[13,"_C","","",0],[13,"_Q","","",0],[13,"_X","","",0],[13,"AY","","",0],[13,"A","","",0],[13,"EE","","",0],[13,"E","","",0],[13,"AI","","",0],[13,"I","","",0],[13,"OH","","",0],[13,"O","","",0],[13,"EW","","",0],[13,"U","","",0],[13,"OO","","",0],[13,"AW","","",0],[13,"UU","","",0],[13,"UH","","",0],[13,"_A","","",0],[13,"_E","","",0],[13,"_I","","",0],[13,"_O","","",0],[11,"fmt","","",0],[11,"from_i64","","",0],[11,"from_u64","","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"to_char","","",0],[11,"from_char","","",0],[11,"is_vowel","","",0],[11,"is_consonant","","",0],[11,"is_untranslated","","",0],[11,"is_short_vowel","","",0],[11,"is_long_vowel","","",0],[11,"to_short_vowel","","",0],[11,"to_long_vowel","","",0],[11,"fmt","","",0],[11,"from_phonemes","","Creates a word from given phonemes.",1],[11,"from_english","","Generates a pronunciation of given English word.",1],[11,"phonemes","","Iterates through phonemes.",1],[11,"as_str","","Returns a string notation of phonemes.",1],[11,"fmt","","",1],[11,"fmt","","",1],[11,"clone","","",2],[6,"Item","",""],[11,"next","","",2],[11,"size_hint","","",2],[11,"next_back","","",2]],"paths":[[4,"Phoneme"],[3,"Word"],[3,"WordPhonemes"]]};
searchIndex['soundchange'] = {"items":[[0,"","soundchange","A tool for implementing sound change algorithms."],[3,"CharOf","",""],[3,"StrOf","",""],[3,"CharTo","",""],[3,"StrTo","",""],[4,"Cond","",""],[13,"Char","","",0],[13,"CharOf","","",0],[13,"Str","","",0],[13,"StrOf","","",0],[4,"Transform","",""],[13,"Char","","",1],[13,"CharTo","","",1],[13,"Str","","",1],[13,"StrTo","","",1],[5,"check_prefix","",""],[5,"check_postfix","",""],[5,"subst","",""],[8,"IntoCond","",""],[10,"into_pre_cond","","",2],[10,"into_post_cond","","",2],[8,"Search","",""],[10,"search_loop","","",3],[8,"IntoTransform","",""],[10,"into_transform","","",4],[11,"check_and_narrow_prefix","","",0],[11,"check_and_narrow_postfix","","",0],[11,"into_pre_cond","","",0],[11,"into_post_cond","","",0],[11,"into_pre_cond","","",5],[11,"into_post_cond","","",5],[11,"into_pre_cond","","",6],[11,"into_post_cond","","",6],[11,"search_loop","","",5],[11,"into_transform","","",7],[11,"into_transform","","",8],[14,"subst_rules!","",""]],"paths":[[4,"Cond"],[4,"Transform"],[8,"IntoCond"],[8,"Search"],[8,"IntoTransform"],[3,"CharOf"],[3,"StrOf"],[3,"CharTo"],[3,"StrTo"]]};

searchIndex['log'] = {"items":[[0,"","log","A lightweight logging facade."],[3,"LogRecord","","The \"payload\" of a log message."],[3,"LogLocation","","The location of a log message."],[12,"module_path","","The module path of the message.",0],[12,"file","","The source file containing the message.",0],[12,"line","","The line containing the message.",0],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter."],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called."],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework"],[13,"Error","","The \"error\" level.",1],[13,"Warn","","The \"warn\" level.",1],[13,"Info","","The \"info\" level.",1],[13,"Debug","","The \"debug\" level.",1],[13,"Trace","","The \"trace\" level.",1],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework."],[13,"Off","","A level lower than all log levels.",2],[13,"Error","","Corresponds to the `Error` log level.",2],[13,"Warn","","Corresponds to the `Warn` log level.",2],[13,"Info","","Corresponds to the `Trace` log level.",2],[13,"Debug","","Corresponds to the `Debug` log level.",2],[13,"Trace","","Corresponds to the `Trace` log level.",2],[5,"max_log_level","","Returns the current maximum log level."],[5,"set_logger","","Sets the global logger."],[5,"enabled","","Determines if the current logger will ignore a log message at the specified\nlevel from the specified module."],[5,"log","","Logs a message."],[8,"Log","","A trait encapsulating the operations required of a logger"],[10,"enabled","","Determines if a log message sent at the specified level from the\nspecified module would be logged.",3],[10,"log","","Logs the `LogRecord`.",3],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"eq","","",1],[11,"partial_cmp","","",1],[11,"partial_cmp","","",1],[11,"cmp","","",1],[6,"Err","",""],[11,"from_str","","",1],[11,"fmt","","",1],[11,"max","","Returns the most verbose logging level.",1],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"eq","","",2],[11,"partial_cmp","","",2],[11,"partial_cmp","","",2],[11,"cmp","","",2],[6,"Err","",""],[11,"from_str","","",2],[11,"fmt","","",2],[11,"max","","Returns the most verbose logging level filter.",2],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",2],[11,"new","","Creates a new `LogRecord`.",4],[11,"args","","The message body.",4],[11,"location","","The location of the log directive.",4],[11,"level","","The verbosity level of the message.",4],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",5],[11,"get","","Gets the current maximum log level filter.",5],[11,"set","","Sets the maximum log level.",5],[11,"fmt","","",6],[11,"fmt","","",6],[11,"description","","",6],[14,"log!","","The standard logging macro."],[14,"error!","","Logs a message at the error level."],[14,"warn!","","Logs a message at the warn level."],[14,"info!","","Logs a message at the info level."],[14,"debug!","","Logs a message at the debug level."],[14,"trace!","","Logs a message at the trace level."],[14,"log_enabled!","","Determines if a message logged at the specified level in that module will\nbe logged."]],"paths":[[3,"LogLocation"],[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"]]};

initSearch(searchIndex);
